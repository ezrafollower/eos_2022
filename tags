!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CARD_STATE_DOWN	game.h	22;"	d
CARD_STATE_UP	game.h	21;"	d
CAT_NUM	random_map.h	4;"	d
CC_ARM	Makefile	/^CC_ARM=arm-unknown-linux-gnu-gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wall -pthread -std=c++11$/;"	m
CFLAGS_ARM	Makefile	/^CFLAGS_ARM=-L \/opt\/arm-unknown-linux-gnu\/arm-unknown-linux-gnu\/lib\/ \\$/;"	m
COL_SIZE	random_map.h	3;"	d
CXX	Makefile	/^CXX=g++$/;"	m
Change_order	random_map.c	/^void Change_order(int pattern[ROL_SIZE][COL_SIZE], int times)$/;"	f
GAMECLIENT_H	game_client.h	2;"	d
GAME_STATE_END	data_utils.h	10;"	d
GAME_STATE_INIT	data_utils.h	8;"	d
GAME_STATE_PLAYING	data_utils.h	9;"	d
Game	game.cpp	/^Game::Game()$/;"	f	class:Game
Game	game.h	/^class Game{$/;"	c
GameClient	game_client.cpp	/^GameClient::GameClient()$/;"	f	class:GameClient
GameClient	game_client.h	/^class GameClient$/;"	c
Generator	random_map.c	/^void Generator(int array[ROL_SIZE][COL_SIZE], int row, int col, int cat_num)$/;"	f
Get_random_pattern	random_map.c	/^void Get_random_pattern(int pattern[ROL_SIZE][COL_SIZE], int rol_size, int col_size, int cat_num)$/;"	f
Get_uniform_pattern	random_map.c	/^void Get_uniform_pattern(int pattern[ROL_SIZE][COL_SIZE], int rol_size, int col_size, int cat_num)$/;"	f
NUM_CARDS	data_utils.h	4;"	d
NUM_PLAYERS	data_utils.h	5;"	d
P	game.cpp	/^int Game::P(int s)$/;"	f	class:Game
P	game_client.cpp	/^int P(int s)$/;"	f
Player	game.h	/^struct Player{$/;"	s
ROL_SIZE	random_map.h	2;"	d
ROUND_INTERVAL	game.h	19;"	d
ROUND_TIMES	data_utils.h	7;"	d
SEM_KEY	game.h	11;"	d
SEM_MODE	game.h	12;"	d
SEM_MODE	game_client.cpp	13;"	d	file:
SERVER_PORT	game.h	24;"	d
SOCKET_UTILS_H	socket_utils.h	2;"	d
SOCKOP_H	sockop.h	2;"	d
SPACE	data_utils.h	11;"	d
Swap_order	random_map.c	/^void Swap_order(int pattern[ROL_SIZE][COL_SIZE], int times)$/;"	f
TRANSPORT_TYPE_TCP	socket_utils.h	14;"	d
TRANSPORT_TYPE_UDP	socket_utils.h	15;"	d
V	game.cpp	/^int Game::V(int s)$/;"	f	class:Game
V	game_client.cpp	/^int V(int s)$/;"	f
__GAME_H__	game.h	2;"	d
__PKT_UTIL_H__	data_utils.h	2;"	d
all_hidden	LCD.h	/^const unsigned short all_hidden[0x800] = {$/;"	v
broadcastToPlayers	game.cpp	/^void Game::broadcastToPlayers()$/;"	f	class:Game
button	client.cpp	/^int button;$/;"	v
card	LCD.h	/^const unsigned short card[7][20][4] = {$/;"	v
card_states	data_utils.h	/^  char card_states[NUM_CARDS];$/;"	m	struct:__anon1
cards	game.h	/^	char cards[NUM_CARDS];$/;"	m	class:Game
cards_empty	game.h	/^	char cards_empty[NUM_CARDS];$/;"	m	class:Game
checkExpandToggle	hw/Hw 1 外送平台（單機版本）.html	/^        function checkExpandToggle () {$/;"	f
checkExpandToggle	hw/Hw 2 外送平台（多人連線版本）.html	/^        function checkExpandToggle () {$/;"	f
checkExpandToggle	hw/Hw 3 外送平台（多人連線版本）.html	/^        function checkExpandToggle () {$/;"	f
checkExpandToggle	lab/Lab 3 簡易計算機.html	/^        function checkExpandToggle () {$/;"	f
checkExpandToggle	lab/Lab 4 簡易名字跑馬燈.html	/^        function checkExpandToggle () {$/;"	f
connectsock	sockop.cpp	/^int connectsock( const char *host , const char *service , const char *transport)$/;"	f
connfd	game.h	/^	int connfd;$/;"	m	struct:Player
createClientSock	socket_utils.c	/^int createClientSock(const char *host, int port, int type)$/;"	f
createServerSock	socket_utils.c	/^int createServerSock(int port, int type)$/;"	f
display	client.cpp	/^lcd_write_info_t display;$/;"	v
errexit	sockop.h	12;"	d
game	client.cpp	/^GameClient game;$/;"	v
gameLoop	game.cpp	/^void Game::gameLoop()$/;"	f	class:Game
gameOver	game.h	/^	int gameOver;$/;"	m	class:Game
gameState	data_utils.h	/^  int gameState;$/;"	m	struct:__anon1
gameState	game.h	/^	int gameState;  	\/\/ to keep track of the game's state (0: menu, 1: game)$/;"	m	class:Game
gameStop	game.cpp	/^void Game::gameStop(){$/;"	f	class:Game
game_timer	game.h	/^	struct itimerval game_timer;$/;"	m	class:Game	typeref:struct:Game::itimerval
generateScrollspy	hw/Hw 1 外送平台（單機版本）.html	/^        function generateScrollspy() {$/;"	f
generateScrollspy	hw/Hw 2 外送平台（多人連線版本）.html	/^        function generateScrollspy() {$/;"	f
generateScrollspy	hw/Hw 3 外送平台（多人連線版本）.html	/^        function generateScrollspy() {$/;"	f
generateScrollspy	lab/Lab 3 簡易計算機.html	/^        function generateScrollspy() {$/;"	f
generateScrollspy	lab/Lab 4 簡易名字跑馬燈.html	/^        function generateScrollspy() {$/;"	f
graph	game_client.h	/^        lcd_full_image_info graph;$/;"	m	class:GameClient
handleInit	game.cpp	/^int Game::handleInit()$/;"	f	class:Game
handlePlaying	game.cpp	/^int Game::handlePlaying()$/;"	f	class:Game
hide_and_play	game.h	/^	bool hide_and_play;$/;"	m	class:Game
hide_and_play	game_client.h	/^        bool hide_and_play;$/;"	m	class:GameClient
hide_p	data_utils.h	/^  bool hide_p;$/;"	m	struct:__anon1
intHandler	main.cpp	/^void intHandler(int signum){$/;"	f
io_fd	client.cpp	/^int io_fd;$/;"	v
io_fd	game_client.h	/^        int server_fd,io_fd;$/;"	m	class:GameClient
key	client.cpp	/^unsigned short key;$/;"	v
key	game_client.h	/^        key_t key;$/;"	m	class:GameClient
keypad_input	game_client.h	/^        char keypad_input[2];$/;"	m	class:GameClient
lcd_semid	game_client.h	/^        int lcd_semid;$/;"	m	class:GameClient
main	client.cpp	/^int main(int argc, char** argv)$/;"	f
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f
main	rmsem.c	/^int main(int argc, char **argv)$/;"	f
myGame	game.h	/^static Game myGame;$/;"	v
newR	data_utils.h	/^  bool newR;$/;"	m	struct:__anon1
newS	data_utils.h	/^  bool newS;\/\/ one round have two section, display section and hide_and_play section$/;"	m	struct:__anon1
newround	game.h	/^	bool newround;$/;"	m	class:Game
newsection	game.h	/^	bool newsection;$/;"	m	class:Game
passivesock	sockop.cpp	/^int passivesock(const char *service , const char *transport , int qlen)$/;"	f
players	game.h	/^	struct Player players[NUM_PLAYERS];$/;"	m	class:Game	typeref:struct:Game::Player
print_pattern	random_map.c	/^void print_pattern(int pattern[ROL_SIZE][COL_SIZE])$/;"	f
quit	game.h	/^	int quit; 			\/\/ boolean to keep game loop running$/;"	m	class:Game
rcv_size	game_client.h	/^        int rcv_size;$/;"	m	class:GameClient
rcvmsg	game_client.h	/^        char rcvmsg[100];$/;"	m	class:GameClient
readServer	game_client.cpp	/^void GameClient::readServer()$/;"	f	class:GameClient
read_pad	game_client.cpp	/^int GameClient::read_pad()$/;"	f	class:GameClient
removeHash	hw/Hw 1 外送平台（單機版本）.html	/^        function removeHash() {$/;"	f
removeHash	hw/Hw 2 外送平台（多人連線版本）.html	/^        function removeHash() {$/;"	f
removeHash	hw/Hw 3 外送平台（多人連線版本）.html	/^        function removeHash() {$/;"	f
removeHash	lab/Lab 3 簡易計算機.html	/^        function removeHash() {$/;"	f
removeHash	lab/Lab 4 簡易名字跑馬燈.html	/^        function removeHash() {$/;"	f
round_cnt	game.h	/^	int round_cnt;$/;"	m	class:Game
round_num	data_utils.h	/^  int round_num;$/;"	m	struct:__anon1
round_num	game_client.h	/^        int round_num;$/;"	m	class:GameClient
run	game_client.cpp	/^void GameClient::run()$/;"	f	class:GameClient
sa	game.h	/^	struct sigaction sa;$/;"	m	class:Game	typeref:struct:Game::sigaction
score	data_utils.h	/^  int score;$/;"	m	struct:__anon1
score	game.h	/^	int score;$/;"	m	struct:Player
scrollToBottom	hw/Hw 1 外送平台（單機版本）.html	/^        function scrollToBottom() {$/;"	f
scrollToBottom	hw/Hw 2 外送平台（多人連線版本）.html	/^        function scrollToBottom() {$/;"	f
scrollToBottom	hw/Hw 3 外送平台（多人連線版本）.html	/^        function scrollToBottom() {$/;"	f
scrollToBottom	lab/Lab 3 簡易計算機.html	/^        function scrollToBottom() {$/;"	f
scrollToBottom	lab/Lab 4 簡易名字跑馬燈.html	/^        function scrollToBottom() {$/;"	f
scrollToTop	hw/Hw 1 外送平台（單機版本）.html	/^        function scrollToTop() {$/;"	f
scrollToTop	hw/Hw 2 外送平台（多人連線版本）.html	/^        function scrollToTop() {$/;"	f
scrollToTop	hw/Hw 3 外送平台（多人連線版本）.html	/^        function scrollToTop() {$/;"	f
scrollToTop	lab/Lab 3 簡易計算機.html	/^        function scrollToTop() {$/;"	f
scrollToTop	lab/Lab 4 簡易名字跑馬燈.html	/^        function scrollToTop() {$/;"	f
secondhit	game_client.h	/^        bool secondhit;$/;"	m	class:GameClient
secondrcv	game.h	/^	bool secondrcv[NUM_PLAYERS];$/;"	m	class:Game
sem	game.h	/^	int sem;$/;"	m	class:Game
sendServer	game_client.cpp	/^void GameClient::sendServer()$/;"	f	class:GameClient
server_Listener	client.cpp	/^void* server_Listener(void* argv)$/;"	f
server_fd	game_client.h	/^        int server_fd,io_fd;$/;"	m	class:GameClient
server_pkt	data_utils.h	/^} server_pkt;$/;"	t	typeref:struct:__anon1
setup	game_client.cpp	/^void GameClient::setup(int server_fd, int io_fd)$/;"	f	class:GameClient
show_7SEG	LCD.c	/^void show_7SEG(int result, int *fd)$/;"	f
show_7SEG	game_client.cpp	/^void GameClient::show_7SEG(int result, int fd)$/;"	f	class:GameClient
show_LCD_msg	LCD.c	/^void show_LCD_msg(char *string, int *fd)$/;"	f
show_LCD_pic	LCD.c	/^void show_LCD_pic(int pattern[ROL_SIZE][COL_SIZE], int fd)$/;"	f
show_LCD_pic	game_client.cpp	/^void show_LCD_pic(int pattern[ROL_SIZE][COL_SIZE], int fd)$/;"	f
show_LED	LCD.c	/^void show_LED(int num, int *fd)$/;"	f
show_LED	game_client.cpp	/^void show_LED(int num, int fd)$/;"	f
smoothHashScroll	hw/Hw 1 外送平台（單機版本）.html	/^        function smoothHashScroll() {$/;"	f
smoothHashScroll	hw/Hw 2 外送平台（多人連線版本）.html	/^        function smoothHashScroll() {$/;"	f
smoothHashScroll	hw/Hw 3 外送平台（多人連線版本）.html	/^        function smoothHashScroll() {$/;"	f
smoothHashScroll	lab/Lab 3 簡易計算機.html	/^        function smoothHashScroll() {$/;"	f
smoothHashScroll	lab/Lab 4 簡易名字跑馬燈.html	/^        function smoothHashScroll() {$/;"	f
sndmsg	game_client.h	/^        char sndmsg[100];$/;"	m	class:GameClient
sndmsg2	game_client.h	/^        char sndmsg2[100];$/;"	m	class:GameClient
socketfd	client.cpp	/^int socketfd;$/;"	v
sockfd	game.h	/^	int sockfd;$/;"	m	class:Game
stage_pointer	game_client.h	/^        int stage_pointer;$/;"	m	class:GameClient
start_pos	LCD.h	/^const unsigned short start_pos[4][3][2] = {$/;"	v
swap	random_map.c	/^void swap(int *a, int *b)$/;"	f
temp	game_client.h	/^        int temp[ROL_SIZE][COL_SIZE];$/;"	m	class:GameClient
thread	client.cpp	/^pthread_t thread;$/;"	v
thread_handler	game.cpp	/^void *Game::thread_handler(void *arg)$/;"	f	class:Game
timer_handler	game.cpp	/^void Game::timer_handler(int signum)$/;"	f	class:Game
windowResize	hw/Hw 1 外送平台（單機版本）.html	/^        function windowResize() {$/;"	f
windowResize	hw/Hw 2 外送平台（多人連線版本）.html	/^        function windowResize() {$/;"	f
windowResize	hw/Hw 3 外送平台（多人連線版本）.html	/^        function windowResize() {$/;"	f
windowResize	lab/Lab 3 簡易計算機.html	/^        function windowResize() {$/;"	f
windowResize	lab/Lab 4 簡易名字跑馬燈.html	/^        function windowResize() {$/;"	f
~Game	game.cpp	/^Game::~Game()$/;"	f	class:Game
~GameClient	game_client.cpp	/^GameClient::~GameClient()$/;"	f	class:GameClient
